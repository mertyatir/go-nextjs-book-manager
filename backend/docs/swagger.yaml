definitions:
  handlers.ErrorResponse:
    properties:
      code:
        description: HTTP status code
        type: integer
      message:
        description: Error message
        type: string
    type: object
  handlers.URLRequest:
    properties:
      operation:
        type: string
      url:
        type: string
    type: object
  handlers.URLResponse:
    properties:
      processed_url:
        type: string
    type: object
  models.Book:
    description: Book object which includes basic book information along with metadata
      from gorm Model
    properties:
      author:
        minLength: 2
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      genre:
        type: string
      id:
        type: integer
      isbn:
        type: string
      publisher:
        type: string
      title:
        minLength: 2
        type: string
      updatedAt:
        type: string
      year:
        type: integer
    required:
    - author
    - title
    - year
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get details of all books available
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: Error retrieving books
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get list of books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book with title, author, year, genre, isbn, publisher,
        and description
      parameters:
      - description: Add Book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Book successfully added
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Error saving book
          schema:
            type: string
      summary: Add a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Book successfully deleted
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: No book found to delete
          schema:
            type: string
        "500":
          description: Error deleting book
          schema:
            type: string
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get details of a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Book found
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Book not found
          schema:
            type: string
        "500":
          description: Database error
          schema:
            type: string
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update the details of an existing book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book object that needs to be updated
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: Book successfully updated
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid request body or ID
          schema:
            type: string
        "404":
          description: Book not found
          schema:
            type: string
        "500":
          description: Database error
          schema:
            type: string
      summary: Update a book
      tags:
      - books
  /process-url:
    post:
      consumes:
      - application/json
      description: Processes a URL based on the operation specified in the request
      parameters:
      - description: URL Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.URLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: URL successfully processed
          schema:
            $ref: '#/definitions/handlers.URLResponse'
        "400":
          description: Invalid request
          schema:
            type: string
        "405":
          description: Only POST method is allowed
          schema:
            type: string
      summary: Process a URL
      tags:
      - URL Processing
swagger: "2.0"
